use async_trait::async_trait;
use bytes::Bytes;
use futures::{Stream, Future, TryFutureExt, StreamExt};
use http_body_util::{BodyExt, Full};
use hyper::body::Incoming;
use hyper::header::{HeaderName, HeaderValue, CONTENT_TYPE};
use hyper::{Request, Response, StatusCode, Uri};
use percent_encoding::{utf8_percent_encode, AsciiSet};
use serde::{Deserialize, Serialize};
use std::borrow::Cow;
use std::convert::Infallible;
use std::error::Error as StdError;
use std::fmt;
use std::marker::PhantomData;
use std::path::Path;
use std::sync::{Arc, Mutex};
use std::task::{Context, Poll};
// use swagger::{ApiError, AuthData, Has, XSpanIdString};

{{#apiUsesMultipartFormData}}
use mime::Mime;
use multipart::server::Multipart;
{{/apiUsesMultipartFormData}}
{{#apiUsesMultipartRelated}}
use hyper::header::HeaderMap;
use mime_multipart::Node;
{{/apiUsesMultipartRelated}}

use crate::models;
use crate::header;

/// Константы для процентного кодирования
const FRAGMENT_ENCODE_SET: &AsciiSet = &percent_encoding::CONTROLS
    .add(b' ').add(b'"').add(b'<').add(b'>').add(b'`');
const ID_ENCODE_SET: &AsciiSet = &FRAGMENT_ENCODE_SET.add(b'|');